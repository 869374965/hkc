(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{500:function(e,t,n){"use strict";n.r(t);var i=n(4),l=Object(i.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("文本溢出我们经常用到的应该就是 text-overflow:ellipsis 了，相信大家也很熟悉，但是对于多行文本的溢出处理确接触的不是很多，实现单行缩略是可以通过下面的代码实现的（部分浏览器需要设置宽度）：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("overflow: hidden;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\n")])])]),n("p",[e._v("WebKit 内核浏览器解决办法首先，WebKit 内核的浏览器实现起来比较简单，可以通过添加一个-webkit-line-clamp 的私有属性来实现，-webkit-line-clamp 是用来限制在一个块元素显示的文本的行数。 为了实现这个效果，它需要组合其他的 WebKit 属性：\ndisplay: -webkit-box 将对象作为弹性伸缩盒子模型显示；\n-webkit-box-orient 设置或检索伸缩盒对象的子元素的排列方式；\ntext-overflow: ellipsis 用省略号“…”隐藏超出范围的文本。具体代码参考如下：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("overflow : hidden;\ntext-overflow: ellipsis;\ndisplay: -webkit-box;\n-webkit-line-clamp: 2;\n-webkit-box-orient: vertical;\n")])])]),n("p",[e._v("这个方法合适 WebKit 浏览器或移动端（绝大部分是 WebKit 内核的）浏览器，效果可以查看：其他浏览器的解决方案目前没有什么 CSS 的属性可以直接控制多行文本的省略显示，比较靠谱的办法应该就是利用相对定位在最后面加上一个省略号了，代码可以参考下面：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('p {\n    position:relative;\n    line-height:1.5em;\n    /* 高度为需要显示的行数*行高，比如这里我们显示两行，则为3 */\n    height:3em;\n    overflow:hidden;\n}\np:after {\n    content:"...";\n    position:absolute;\n    bottom:0;\n    right:0;\n    padding: 0 5px;\n    background-color: #fff;\n}\n')])])]),n("p",[e._v("不过这样会有一点问题：需要知道显示的行数并设置行高才行；IE6/7 不支持 after 和 content，需要添加一个标签来代替；省略号的背景颜色跟文本背景颜色一样，并且可能会遮住部分文字，建议可以使用渐变的 png 背景图片代替。")])])}),[],!1,null,null,null);t.default=l.exports}}]);